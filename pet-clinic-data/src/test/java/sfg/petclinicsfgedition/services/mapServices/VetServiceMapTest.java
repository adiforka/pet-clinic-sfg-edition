package sfg.petclinicsfgedition.services.mapServices;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import sfg.petclinicsfgedition.model.Vet;
import sfg.petclinicsfgedition.services.VetService;

import java.util.Set;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

class VetServiceMapTest {

    VetService service;
    Long testId = 1L;

    @BeforeEach
    void setUp() {
        service = new VetServiceMap(new SpecialityServiceMap());
        service.save(Vet.builder().id(testId).build());
    }

    @Test
    void findAll() {
        Set<Vet> vets = service.findAll();
        assertEquals(1, vets.size());
    }

    @Test
    void findById() {
        Vet vet = service.findById(testId);
        assertEquals(testId, vet.getId());
    }

    /*why are we testing manual id-setting if the id is supposed to be generated automatically at persistence?
     * we are simulating spring DI etc. but there it happens only on auto, no?*/
    @Test
    void saveWithId() {
        Long id = 2L;

        Vet savedVet = service.save(Vet.builder().id(id).build());
        assertEquals(id, savedVet.getId());
    }

    @Test
    void saveWithoutId() {
        Vet savedVet = service.save(Vet.builder().build());
        //check that if you don't set an id, it is generated by inclusion in the map
        assertNotNull(savedVet);
        assertNotNull(savedVet.getId());
    }

    @Test
    void deleteById() {
        service.deleteById(testId);
        assertEquals(0, service.findAll().size());
    }

    @Test
    void delete() {
        service.delete(service.findById(testId));
        assertEquals(0, service.findAll().size());
    }
}